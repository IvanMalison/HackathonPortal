[[TOC]]

= Yelp Hack-A-Thon =
1)  When is it?

  11/10/2011-11/11/2011

  We'll start on Thursday and finish around 3:00pm Friday. At 3:30pm, we'll do presentations and awards.

  We'll provide plenty of meals, snacks and caffeine during the hack-a-thon.

2) Who's invited to hack at the hack-a-thon?

  Everyone in product, systems and developers (interns included).

3) What can I work on?

  Whatever you want!

  Scratch your developer itches. If you need some suggestions:

 * Visualization or other views - we have a lot great data that can be mined
 * Widgets
 * Cool examples of our public API
 * Tools to make your or your fellow developer lives easier
 * Mehfil feed -- err, perhaps this one is already done

4) If I build a cool product feature, will we launch it?

  Product features still have to go through the product group to get released on public site. Don't let that discourage you from building your ideas -- you never know what might interest the team.

5) Can I start hacking before the hack-a-thon?

  Sure can -- but do it on your own time.

6) Can I hack by myself?

  We're a team here at Yelp, not a bunch of lone gunmen. Lets try for teams of 2-3. If you need help finding a partner, let me know. You can also use the wiki to post your ideas and solicit help.

7) Awards?

 * Useful
 * Funny
 * Cool
 * Hardcore

8) Problems, Issues, or Ideas?

  Come talk to Jason (jfennell), KB (ashleykb) or Pita (pcheng), since we making this happen.

== Tools ==
 * Thinking of doing something data-focused? Check out the Yelp internal dataset at http://people.yelpcorp.com/~mattj/data/hackathon.html

== Ideas ==
 * '''Yelp Urban Dictionary''': (jfennell) A place to define all the terms you would love to know about, an a few you would rather not.
 * '''Kickass Metrics''': (amf) Clearly we can improve on the monochrome, non-anti-aliased, single-dimension charts that currently pass for business intelligence around here...
 * '''Yelp Celebrities''': (amf) This might not take the whole two days to build, but how about a nice page that shows who the most followed local Yelpers are, so you can get in on the adulation, too?
 * '''Suggestions for you''': (amf) Can we get a little collaborative filtering up in this joint? I want to know what restaurants I'm missing out on among my peers.
 * '''Siri-style queries on Android''' (gstarnbe): Use Android's voice recognition API to convert speech to text. Then use something like Python-NLTK to convert this text into a search query.
 * '''user check-ins to determine biz hours'''. See if we can model biz open hours using check-in data. We've got a lot of external check-in data we can use here, too (eric).  Also would be cool to see check-ins plotted over time of day to show when the place is hoppin'!(ryank)
 * '''single business activity visualization'''.  A pretty way to stream/display check-ins, uploaded photos, quick tips, etc for a single business.  Could pull in tweets for a single hash tag, too.  CMs have been wanting something like this forever to project on a massive wall at events. (eric)
 * '''Where visitors are from map'''.  Have you ever been to a place and they have a map where you can pin where you are from?  Since we have people's hometowns, we can use checkins and reviews to create a map for each business of where people have visited from.  Would be a cool widget for business homepages. (ryank)
 * '''Yelp in Space''': Build a Yelp weather balloon with an HD camera and a Yelp logo from our building. http://www.youtube.com/watch?v=ZCAnLxRvNNc&feature=related (yoni)
 * '''Freeway search''': (jfennell) Figure out the direction the user is headed and search ahead of them for the things they are looking for.  Alternately, get routing information and just search along the route.
 * '''Code metrics''':  (billings) The commit rate to master has remained remarkably constant since mid-2009:  http://people.yelpcorp.com/~billings/commit_rate.png. Are engineers committing larger chunks of code less often?   At what rate is our codebase growing?  What about tests?
 * '''Yelp Data to Stock Price''': (smg) Figure out if there is any correlation between changes in the percentage of activities for a particular business (searches, check ins, reviews written) and the change in its quarterly stock price
 * '''Pulse-style review listing page for mobile''': Treat each business like an RSS feed and show images and reviews/review headlines in the boxes like on [http://t1.gstatic.com/images?q=tbn:ANd9GcSjyAHeznD1PrhbwAr9CaW8OE4xIwzhNmD4Jla8L0XxfdFtLpNG here] (rkaminsk).
 * '''Tell Sales Who to Call Next''': Using data such as location, reviews, category, etc. figure out what dimension best predict ad sales to a business, then make a recommendation engine that tells a salesperson the best business to call next that will lead to a sale (vivek,chrisk,rkaminsk).
 * '''Did the experiment affect the search results?''': (billings) Problem: Many search queries return the same results irrespective of what experiment cohort they are in; when analyzing an experiment, we'd love to be able to drill down into only the affected searches.  Solution: have an SOA service that the search servlet posts search queries to, and have this service re-run the search against the various experiment cohorts and log results.  This presumes that we have enough search capacity (I think that we do).  Could do sampling otherwise.
 * '''The Coffee Cloud''': (cliff) Visualization/ map mashup of mobile search and location data with time of day.  It's 7am where are searches for coffee happening? Perhaps you can 'scrub' through hours of the day to find the peak of coffee searches. Hope to map a bunch of other user queries.
 * '''Secret Menus''': (jeffmicklos) Hey guys, it would be awesome if we could surface restaurants secret menus! I mean, really, is there any better way to impress your friends by going to Blue Bottle and ordering a Gibraltar? Or Grits and Pulled Pork at Little Skillet. DO YOU EVEN KNOW WHAT A "PURIST" IS AT AMERICAN GRILLED CHEESE!? Guys, we have so much awesome review data that we can extract such great things from. Clearly though, I am not smart enough to do this so one of you geniuses will have to.  Let's use our power for good. I will buy you coffee.
 * '''remember the (catchy acronym)''': (jaredg) Do you ever lose track of {tickets, code reviews, batches/apperrors that need follow up} in all the mail you get? My idea is to scrape incoming email from our various internal systems (process and pass through the SMTP sessions as they come out of Trac, Reviewboard, Nagios) and summarize them into a personalized dashboard of what needs your attention. It may not be sexy, but I think it could be useful.
 * '''Just tell me what I should make a list of, already! ''' (amf) Making lists is kind of a pain, not because it's that hard to put them together, but because I never think of making a list, and then if I do, I'm not sure what would make a good one. Can we suggest to a fashionista that she create a list of her favorite boutiques (and just give her a starter list of her top 5)? Or to a caskforce member his favorite watering holes? Or to a golf nut his favorite courses?
 * '''Dynamic service sets''': (billings) Let service instances dynamically register in a zookeeper directory, write some python code to intelligently load balance / retry over said service sets.  See http://www.umiacs.umd.edu/~jimmylin/publications/Leibert_etal_SoCC2011.pdf /  http://sna-projects.com/norbert/.  Aim is to be able to hard restart a service without clients much noticing.
 * '''RegexMS App''': (kmosher) Say you had this contact. Let's call him "Nagios", and he/she/it sends you all sorts of random shit and some of it is REALLY important and some of it is less important. Wouldn't it be nice if you could set filters on the contents of his/her/its messages to control the types of notification you get? Let's write a Mobile that supports lots of filter options for SMS. iOS or Android or both. (Or neither, I should really check to see if this already exists)
 * '''Coffee Snob''': (ivanlei) Given a list of the actually good coffee shops in a city (as made by incredibly pretentious coffee snobs) and a huge ass list of keywords, figure out the difference between real 5 star coffee shops (blue bottle) vs. fake ones (with white chocolate raspberry mochas) in any city.
 * '''Coffee Snob v2''': (ivanlei) Do the above using only a list of actually good and actually not good coffee shops, algorithmically determining that huge ass list of keywords.
 * '''Where in the world is Yelper San Diego''': (ivanlei) Visualize as much of the unencrypted data flowing from the Yelp iPhone app as possible to make a super creepy stalker view of how much more the app knows vs. how much you think it knows.  Success is mapping someone's entire weekend - where they were and for how long - without ever using check-in data.
 * '''Fog of war''' (madhu, eric, garrick) Check-in visualizations overlaid on google maps.  Checking in at a business will plant a marker that reveals nearby businesses in a small radius around it, with the rest of the map shrouded in fog of war.  Possible game aspect to this.
 * '''Concierge v2''': (mpathak) Help people find everything that is great about a new city. Provide users a list of things they could do in a day in a city they've never visited before. Think restaurants, places of interest, shops, bars, pubs...
 * '''Active XSS/CSRF scanner based on ranger logs (gstarnbe)''': Write a scanner that analyzes the ranger logs and determines which URLs are accessed and which types of parameters each URL expects. Then automatically test our server for XSS and CSRF vulnerabilities by rewriting the queries and examining the responses. Some of this functionality is already covered by existing scanners such as ratproxy. By writing our own scanner we would be able to better adapt to the characteristics of our site.
 * '''i18n dashboard (wing)''': Every day we're growing our communities in just about every cool city in Europe (London, Paris, Berlin, Rome, Madrid, Amsterdam, etc.). We need a better reminder of how awesome that is - show local time, pull in recent content (especially photos), and some cool stats to remind us of what's going on out there.
 * '''Friends' rating (ytan)''': Usually, we trust friends' reviews more than others. For each user, can we provide ratings based on reviews from the network of his/her friends (directly connected friends, friends of friends ...) and reviewers followed by the user? Additionally, we can also try to correlate this type of rating with the current rating over all reviews. If two are far way off, that might be an indicator of something to take a close look.
 * '''User Highlights (aditya):''' "Review Highlights" for individual users.. This lets you see the words and phrases used by a reviewer that distinguish him from everybody else. We can see what literary references and catch phrases people commonly use and sometimes what specific dishes and cuisines they are obsessed with.
 * '''Yelpers Like Me (jhurley)''': Build a crude user-to-user similarity engine that allows you to filter reviews by users who are "like you" - who have rated the same places you have rated in a similar way. 
 * '''!FireMon''': (jbrown, you?) A new monitoring system using the firefly data API. You know you want to get in on a project this Useful. Lots of potential for pretty client-side development, and lots of ways to do cool things in the backend.
 * '''Yelp reviews view from space (robb)''': Create a visualization of Yelp reviews overlaid on a 3D globe. Each Yelp review lighting up the location of the place reviewed. Have a slider so that we can see the evolution of the reviews over time, we should end up with a visualization that is close to what Earth looks like at night viewed from space.
 * '''Yelpcraft''': Create a game where you battle your friends based on Yelp Check-Ins. (Yoni)
 * '''Makerbot Monocle''': (kmosher) Point a Kinect at the MakerBot and show an augmented reality view of what the model will look like before/as it's getting printed.
 * '''Scavenger Hunt''': (bhewitt) Mobile phone users register for a scavenger hunt that occurs at a given time. At that time, a push notification is sent out with the first of a series of predetermined instructions (e.g. "Go to pub X and take a photo with the barkeep", "Collect a piece of special-edition Yelp schwag from store Y"). The user must go to that business and check in to receive the next instruction. The fact that they have to pick up a physical object as well would help curtail cheating. The final location could be a Yelp-sponsored booth/afterparty/meetup where you would show off the things you collected and have an awards ceremony.
 * '''Roadtrip''':  (jsnyder) plan a road trip, and find places to get gas, eat, or stay, N miles off your route.

== Teams ==
 * '''Remote Testify''' (sumeet, juliank, spatel, ...) - Testing can be slow during development which means it isn't done enough. We'd like to make something that keeps a sandbox and testify instance running for you that you can request to run tests and have the results reported quickly back to your editor. Regular restarts of the sandbox and other things like that to make sure things stay clean as well as editor plugins for the four big ones. We have people for Vim, Sublime Text and Eclipse+Pydev. Looking for Emacs and Textmate users too.
 * '''Disco MRJob''' (mattj, bchess, jretz) - Getting Disco running as a runner for MRJob.  Hadoop is bloated and uses too much ram.  And we give more money to Amazon to be able to use it.  mattj also has a custom MapReduce implementation he's been working on.  Maybe tinkering with zeromq
 * '''Thinking Big''' (vivek, bheil, ?) - We're going to try to cook up some big bold ideas that could make us money and create designs for the best ones (e.g. selling leads to service businesses and insuring the transaction, biz owner mobile app that gives us an end-to-end reservation platform, and many more!).
 * '''Yelp IRC bot''' (dmitriy, eevee, ayust, +) - swiss-army IRC bot, hubot-style. get yelp performance/aliveness statistics, deploy code, keep track of stages, search trac, whatever else ((short story: http://pb.yelpcorp.com/23069))
 * '''Sounds Like Ecstasy''' (forrest, skimbrel, aneeshg, ???, profit) - Use [http://chuck.cs.princeton.edu/ ChucK] to generate music and/or visuals based on a live yelp data stream.  Data/pattern analysis for creating something musically significant out of this information.  Potential for awesome: very high.
 * '''Project Omicron''' (plucas, aoneal, atinits, ?) - A dashboard for site performance on a per-servlet level to help us track performance gains/losses over time. And other stuff too!
 * '''Attack the Gas Station''': (gstarnbe, pberens, ivanlei) Active XSS/CSRF scanner based on ranger logs. Write a scanner that analyzes the ranger logs and determines which URLs are accessed and which types of parameters each URL expects. Then automatically test our server for XSS and CSRF vulnerabilities by rewriting the queries and examining the responses. Some of this functionality is already covered by existing scanners such as ratproxy. By writing our own scanner we would be able to better adapt to the characteristics of our site.
 * '''Box''': (alexd, eskil) It's black.
 * '''Yelper Helper''': (amir, steng) Copy and pasted straight from last hackathon's page :) - Allow users to setup location reminders for businesses (either individually or for all bookmarks) - The user should also be able to set up a filter for location reminders ("remind me whenever I'm next to a bar that has a deal at night")

== Previous Hackathons ==
See the directory of all hackathons for ideas and previous projects: [[HackAThon]]